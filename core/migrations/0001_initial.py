# Generated by Django 5.2.5 on 2025-08-20 22:21

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Course code (e.g., CS101, MATH201)', max_length=20)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('credits', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)])),
                ('level', models.CharField(choices=[('100', 'Level 100 (Introductory)'), ('200', 'Level 200 (Intermediate)'), ('300', 'Level 300 (Advanced)'), ('400', 'Level 400 (Specialized)'), ('500', 'Level 500 (Graduate)')], default='100', max_length=3)),
                ('course_type', models.CharField(choices=[('core', 'Core Course'), ('elective', 'Elective Course'), ('lab', 'Laboratory'), ('project', 'Project Work'), ('thesis', 'Thesis/Dissertation')], default='core', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('learning_outcomes', models.TextField(blank=True, help_text='Course learning outcomes', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['department', 'code'],
            },
        ),
        migrations.CreateModel(
            name='ProgramType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('duration_years', models.IntegerField(help_text='Typical duration in years')),
                ('level', models.CharField(help_text='Academic level (e.g., Undergraduate, Graduate)', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., Fall 2023, Spring 2024', max_length=50)),
                ('code', models.CharField(help_text='e.g., F2023, S2024', max_length=20, unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_current', models.BooleanField(default=False)),
                ('registration_start', models.DateField(help_text='When course registration begins')),
                ('registration_end', models.DateField(help_text='When course registration ends')),
                ('add_drop_deadline', models.DateField(help_text='Last day to add/drop courses')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='CourseOffering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(default='A', help_text='Section identifier', max_length=10)),
                ('capacity', models.IntegerField(default=30)),
                ('enrolled', models.IntegerField(default=0)),
                ('room', models.CharField(blank=True, max_length=50, null=True)),
                ('schedule', models.TextField(blank=True, help_text='Class schedule details', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offerings', to='core.course')),
                ('lecturer', models.ForeignKey(blank=True, limit_choices_to={'role': 'lecturer'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='taught_courses', to=settings.AUTH_USER_MODEL)),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_offerings', to='core.semester')),
            ],
            options={
                'ordering': ['semester', 'course', 'section'],
                'unique_together': {('course', 'semester', 'section')},
            },
        ),
        migrations.CreateModel(
            name='CoursePrerequisite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_mandatory', models.BooleanField(default=True)),
                ('minimum_grade', models.CharField(blank=True, help_text='Minimum required grade if applicable', max_length=2, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='required_prerequisites', to='core.course')),
                ('prerequisite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='required_for_courses', to='core.course')),
            ],
            options={
                'unique_together': {('course', 'prerequisite')},
            },
        ),
        migrations.AddField(
            model_name='course',
            name='prerequisites',
            field=models.ManyToManyField(blank=True, through='core.CoursePrerequisite', through_fields=('course', 'prerequisite'), to='core.course'),
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Department code (e.g., CS, MATH, PHYS)', max_length=10)),
                ('name', models.CharField(help_text='Department name', max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('head_of_department', models.ForeignKey(blank=True, limit_choices_to={'role': 'lecturer'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='headed_departments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['faculty', 'code'],
            },
        ),
        migrations.AddField(
            model_name='course',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='core.department'),
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Faculty code (e.g., SCI, ENG, BUS)', max_length=10, unique=True)),
                ('name', models.CharField(help_text='Faculty name', max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dean', models.ForeignKey(blank=True, limit_choices_to={'role': 'lecturer'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dean_of_faculties', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Faculties',
                'ordering': ['code'],
            },
        ),
        migrations.AddField(
            model_name='department',
            name='faculty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='core.faculty'),
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Program code (e.g., BSC-CS, DIP-BUS)', max_length=20, unique=True)),
                ('name', models.CharField(help_text='Program name', max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('duration', models.IntegerField(help_text='Duration in semesters')),
                ('total_credits', models.IntegerField(help_text='Total credits required')),
                ('category', models.CharField(choices=[('degree', 'Degree Program'), ('diploma', 'Diploma Program'), ('certificate', 'Certificate Program'), ('postgrad', 'Postgraduate Program')], default='degree', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='programs', to='core.department')),
                ('program_coordinator', models.ForeignKey(blank=True, limit_choices_to={'role': 'lecturer'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='coordinated_programs', to=settings.AUTH_USER_MODEL)),
                ('program_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='programs', to='core.programtype')),
            ],
            options={
                'ordering': ['department', 'code'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='course',
            unique_together={('department', 'code')},
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateTimeField(auto_now_add=True)),
                ('grade', models.CharField(blank=True, choices=[('A', 'A (Excellent)'), ('B', 'B (Good)'), ('C', 'C (Satisfactory)'), ('D', 'D (Pass)'), ('F', 'F (Fail)'), ('W', 'W (Withdrawn)'), ('I', 'I (Incomplete)'), ('IP', 'IP (In Progress)'), ('', 'No Grade Yet')], max_length=2)),
                ('is_active', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('registered', 'Registered'), ('completed', 'Completed'), ('withdrawn', 'Withdrawn'), ('failed', 'Failed')], default='registered', max_length=20)),
                ('credits_earned', models.IntegerField(blank=True, null=True)),
                ('course_offering', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='core.courseoffering')),
                ('student', models.ForeignKey(limit_choices_to={'role': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-enrollment_date'],
                'unique_together': {('student', 'course_offering')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='department',
            unique_together={('faculty', 'code')},
        ),
        migrations.CreateModel(
            name='ProgramCurriculum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.IntegerField(help_text='Semester when this course is typically taken', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('is_required', models.BooleanField(default=True)),
                ('credits_contribution', models.IntegerField(help_text='Credits this course contributes to the program')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_programs', to='core.course')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='curriculum', to='core.program')),
            ],
            options={
                'verbose_name_plural': 'Program curricula',
                'ordering': ['program', 'semester', 'course'],
                'unique_together': {('program', 'course')},
            },
        ),
        migrations.CreateModel(
            name='ProgramEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateField()),
                ('expected_graduation', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('suspended', 'Suspended'), ('withdrawn', 'Withdrawn')], default='active', max_length=20)),
                ('current_semester', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='core.program')),
                ('student', models.ForeignKey(limit_choices_to={'role': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='program_enrollments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-enrollment_date'],
                'unique_together': {('student', 'program')},
            },
        ),
    ]
